/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * editdanHapusKriteria.java
 *
 * Created on 29 Okt 13, 13:57:04
 */
package ADMIN;

import Controller.KriteriaController;
import Entity.*;
import java.awt.event.ActionEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class editdanHapusKriteria extends javax.swing.JPanel {

    private final double[] nilaiPrioritas = {1.0, 0.67, 0.33};
    private boolean isSubKriteriaDeleted = false;
    ArrayList<SubKriteria> subKriteriaListToRemove;
    /** Creates new form editdanHapusKriteria */
    public editdanHapusKriteria() {
        initComponents();
        subKriteriaListToRemove=new ArrayList<SubKriteria>();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kodeKriteriaLabel = new javax.swing.JLabel();
        kodekriteriaTF = new javax.swing.JTextField();
        namaKriteriaLabel = new javax.swing.JLabel();
        namaKriteriaTF = new javax.swing.JTextField();
        tingkatPrioritasCBLabel = new javax.swing.JLabel();
        tingkatPrioritasCB = new javax.swing.JComboBox();
        kriteriaLabel1 = new javax.swing.JLabel();
        cariButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        kriteriaLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        subKriteriaTabel = new javax.swing.JTable();
        ubahButton = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 153, 255));

        kodeKriteriaLabel.setText("Kode Kriteria");

        namaKriteriaLabel.setText("Nama Kriteria");

        tingkatPrioritasCBLabel.setText("Tingkat Prioritas");

        tingkatPrioritasCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Prioritas 1", "Prioritas 2", "Prioritas 3" }));
        tingkatPrioritasCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tingkatPrioritasCBActionPerformed(evt);
            }
        });

        kriteriaLabel1.setFont(new java.awt.Font("Stencil", 0, 18)); // NOI18N
        kriteriaLabel1.setText("EDIT DAN DELETE KRITERIA ");

        cariButton.setText("CARI");
        cariButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariButtonActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 276));

        kriteriaLabel.setBackground(new java.awt.Color(0, 0, 51));
        kriteriaLabel.setFont(new java.awt.Font("Stencil", 0, 18)); // NOI18N
        kriteriaLabel.setForeground(new java.awt.Color(0, 0, 51));
        kriteriaLabel.setText("SUB KRITERIA");

        subKriteriaTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "kode Sub Kriteria", "Nama Sub Kriteria", "Bobot"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(subKriteriaTabel);

        ubahButton.setText("UBAH");
        ubahButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubahButtonActionPerformed(evt);
            }
        });

        jButton4.setText("DELETE");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Remove");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(239, 239, 239)
                .addComponent(ubahButton)
                .addGap(44, 44, 44)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(kriteriaLabel)
                .addGap(323, 323, 323))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(kriteriaLabel)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ubahButton)
                    .addComponent(jButton4))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(kodeKriteriaLabel)
                            .addComponent(namaKriteriaLabel))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(namaKriteriaTF, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(kodekriteriaTF, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(437, 471, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tingkatPrioritasCBLabel)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cariButton)
                            .addComponent(tingkatPrioritasCB, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(295, 295, 295)
                .addComponent(kriteriaLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 810, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(kriteriaLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(kodeKriteriaLabel)
                    .addComponent(kodekriteriaTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(namaKriteriaLabel)
                    .addComponent(namaKriteriaTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tingkatPrioritasCBLabel)
                    .addComponent(tingkatPrioritasCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(cariButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tingkatPrioritasCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tingkatPrioritasCBActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_tingkatPrioritasCBActionPerformed

    private void cariButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariButtonActionPerformed
        try {
            // TODO add your handling code here:
            String kode_kriteria = kodekriteriaTF.getText();
            KriteriaController kc = new KriteriaController();

            Kriteria data = kc.getByIdKriteria(kode_kriteria);
            String nama_kriteria = data.getNama_kriteria();
            Double bobot_kriteria = data.getBobot_kriteria();

            namaKriteriaTF.setText(nama_kriteria);
            for (int i = 0; i < nilaiPrioritas.length; i++) {
                if (bobot_kriteria == nilaiPrioritas[i]) {
                    tingkatPrioritasCB.setSelectedIndex(i);
                }
            }
//            System.out.println("Bobot--" + bobot_kriteria);
            List<SubKriteria> kriteria = KriteriaController.getKriteriaKontrol().getSubKriteriaById(kode_kriteria);
            ((DefaultTableModel) subKriteriaTabel.getModel()).setRowCount(kriteria.size());
            for (int i = 0; i < kriteria.size(); i++) {
                DefaultTableModel model = (DefaultTableModel) subKriteriaTabel.getModel();
                model.setValueAt(kriteria.get(i).getId_subkriteriakriteria(), i, 0);
                model.setValueAt(kriteria.get(i).getNama_subkriteria(), i, 1);
                model.setValueAt(kriteria.get(i).getBobot_subkriteria(), i, 2);


            }
        } catch (SQLException ex) {
            Logger.getLogger(editdanHapusKriteria.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(editdanHapusKriteria.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cariButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) subKriteriaTabel.getModel();
        if (model.getRowCount() < 5) {
            Vector databaru = new Vector();
            model.addRow(databaru);
            for (int i = 0; i < model.getRowCount(); i++) {
                double row = (i + 1);
                double bobot = row / model.getRowCount();
//                System.out.println(row + "/" + model.getRowCount() + "=" + bobot);//
                model.setValueAt(bobot, i, 2);
                model.setValueAt("SUB-" + (i + 1), i, 0);
            }
        }
        isSubKriteriaDeleted = true;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ubahButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubahButtonActionPerformed
        try {
            // TODO add your handling code here:
            Kriteria kriteriaBaru = new Kriteria();
            String kode_kriteria = kodekriteriaTF.getText();
            System.out.println(kodekriteriaTF.getText());
            String nama_kriteria = namaKriteriaTF.getText();
            double prioritas = nilaiPrioritas[tingkatPrioritasCB.getSelectedIndex()];
            kriteriaBaru.setId_kriteria(kode_kriteria);
            kriteriaBaru.setNama_kriteria(nama_kriteria);
            kriteriaBaru.setBobot_kriteria(prioritas);
            for (int i = 0; i < subKriteriaTabel.getRowCount(); i++) {
                SubKriteria sub = new SubKriteria();
                String kode_subkriteria = subKriteriaTabel.getValueAt(i, 0).toString();
                String nama_subkriteria = subKriteriaTabel.getValueAt(i, 1).toString();
                System.out.println(nama_subkriteria);
                String bobot = subKriteriaTabel.getValueAt(i, 2).toString();
                double bobotkriteria = Double.parseDouble(bobot);
                sub.setId_subkriteriakriteria(kode_subkriteria);
                sub.setNama_subkriteria(nama_subkriteria);
                sub.setBobot_subkriteria(bobotkriteria);
                kriteriaBaru.addSubkriteria(sub);
            }
            KriteriaController pemkon = KriteriaController.getKriteriaKontrol();
            boolean isSuccess=true;
            if (isSubKriteriaDeleted) {
                isSuccess=pemkon.ubahDataKriteriaSubKriteria(kriteriaBaru,subKriteriaListToRemove,this);
            } else {
                isSuccess=pemkon.ubahDataKriteria(kriteriaBaru);
            }
            if(isSuccess){
                JOptionPane.showMessageDialog(this, "Data berhasil disimpan");
                subKriteriaListToRemove=new ArrayList<SubKriteria>();
            }else{
                subKriteriaListToRemove=new ArrayList<SubKriteria>();
                JOptionPane.showMessageDialog(this, "Data gagal disimpan");
                this.cariButtonActionPerformed(evt);
            }
            subKriteriaListToRemove=new ArrayList<SubKriteria>();
            isSubKriteriaDeleted = false;
            
        } catch (SQLException ex) {
            Logger.getLogger(editdanHapusKriteria.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_ubahButtonActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) subKriteriaTabel.getModel();
        if (model.getRowCount() > 0) {
            if (subKriteriaTabel.getSelectedRow() != -1) {
                SubKriteria s=new SubKriteria();
//                "kode Sub Kriteria", "Nama Sub Kriteria", "Bobot"
                s.setId_subkriteriakriteria(String.valueOf(subKriteriaTabel.getValueAt(subKriteriaTabel.getSelectedRow(), 0)));
                s.setNama_subkriteria(String.valueOf(subKriteriaTabel.getValueAt(subKriteriaTabel.getSelectedRow(), 1)));
                s.setBobot_subkriteria(Double.valueOf(String.valueOf(subKriteriaTabel.getValueAt(subKriteriaTabel.getSelectedRow(), 2))));
                subKriteriaListToRemove.add(s);
                model.removeRow(subKriteriaTabel.getSelectedRow());
            } else {
                model.removeRow(model.getRowCount() - 1);
            }
            //hitung ulang
            for (int i = 0; i < model.getRowCount(); i++) {
                double row = (i + 1);
                double bobot = row / model.getRowCount();
//                System.out.println(row + "/" + model.getRowCount() + "=" + bobot);
                model.setValueAt(bobot, i, 2);
                model.setValueAt("SUB-" + (i + 1), i, 0);
            }
        }
         isSubKriteriaDeleted = true;
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            // TODO add your handling code here:
            String kode_kriteria = kodekriteriaTF.getText();
            Kriteria kr = new Kriteria();
            kr.setId_kriteria(kode_kriteria);
            KriteriaController kc = new KriteriaController();
            kc.deletepoinKriteria(kr);
            kc.deletesubKriteria(kr);
            kc.deleteKriteria(kr);
            JOptionPane.showMessageDialog(null, "Data berhasil di dihapus");
        } catch (SQLException ex) {
            Logger.getLogger(editdanHapusKriteria.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cariButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel kodeKriteriaLabel;
    private javax.swing.JTextField kodekriteriaTF;
    private javax.swing.JLabel kriteriaLabel;
    private javax.swing.JLabel kriteriaLabel1;
    private javax.swing.JLabel namaKriteriaLabel;
    private javax.swing.JTextField namaKriteriaTF;
    private javax.swing.JTable subKriteriaTabel;
    private javax.swing.JComboBox tingkatPrioritasCB;
    private javax.swing.JLabel tingkatPrioritasCBLabel;
    private javax.swing.JButton ubahButton;
    // End of variables declaration//GEN-END:variables

    public static void main(String[] args) {
        JFrame f = new JFrame();
        f.setSize(500, 500);
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.add(new editdanHapusKriteria());
        f.setVisible(true);
    }
}
